// Generated by Selenium IDE

import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class FollowTheLinksOfAnUnauthorizedPersonTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    @Before
    public void setUp() {
        String driverType = System.getenv("DRIVER");
        if(driverType.equals("CHROME")) {
            driver = new ChromeDriver();
        }else if(driverType.equals("FIREFOX")){
            driver = new FirefoxDriver();
        }
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        System.setProperty("webdriver.chrome.driver", "/usr/bin/chromedriver");
        System.setProperty("webdriver.gecko.driver", "/usr/bin/geckodriver");
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    public String waitForWindow(int timeout) {
        try {
            Thread.sleep(timeout);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        Set<String> whNow = driver.getWindowHandles();
        Set<String> whThen = (Set<String>) vars.get("window_handles");
        if (whNow.size() > whThen.size()) {
            whNow.removeAll(whThen);
        }
        return whNow.iterator().next();
    }

    @Test
    public void followTheLinksOfAnUnauthorizedPerson() {
        driver.get("https://dfiles.eu/");
        driver.manage().window().setSize(new Dimension(960, 1053));
        vars.put("window_handle", driver.getWindowHandle());
        {
            WebElement element = driver.findElement(By.xpath("//a[contains(@class, \'flag_ru\')]"));
            JavascriptExecutor jse = (JavascriptExecutor)driver;
            jse.executeScript("arguments[0].scrollIntoView()", element);
        }
        driver.findElement(By.xpath("//a[contains(@class, \'flag_ru\')]")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//a[contains(@class, \'active\') and contains(@class, \'flag_ru\')]")));
        }
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[contains(text(),\'FTP загрузка\')]")));
        }
        {
            WebElement element = driver.findElement(By.xpath("//a[contains(text(),\'FTP загрузка\')]"));
            JavascriptExecutor jse = (JavascriptExecutor) driver;
            jse.executeScript("arguments[0].click()", element);
        }
        assertThat(driver.findElement(By.xpath("//form[@id=\'login_frm\']/table/tbody/tr[4]/th")).getText(), is("Логин:"));
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[@id=\'logo\']")));
        }
        {
            WebElement element = driver.findElement(By.xpath("//a[@id=\'logo\']"));
            JavascriptExecutor jse = (JavascriptExecutor) driver;
            jse.executeScript("arguments[0].click()", element);
        }
        driver.switchTo().window(vars.get("window_handle").toString());
        if(driver.findElements(By.xpath("//form[@id=\'login_frm\']/table/tbody/tr[4]/th")).size()>0
                && driver.findElement(By.xpath("//form[@id=\'login_frm\']/table/tbody/tr[4]/th")).getText().equals("Логин:")){
            driver.findElement(By.xpath("//a[@id=\'logo\']")).click();
        }
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[contains(text(),\'Удаленная загрузка\')]")));
        }
        {
            WebElement element = driver.findElement(By.xpath("//a[contains(text(),\'Удаленная загрузка\')]"));
            JavascriptExecutor jse = (JavascriptExecutor) driver;
            jse.executeScript("arguments[0].click()", element);
        }
        assertThat(driver.findElement(By.xpath("//form[@id=\'login_frm\']/table/tbody/tr[4]/th")).getText(), is("Логин:"));

        {
            WebElement element = driver.findElement(By.xpath("//a[@id=\'logo\']"));
            JavascriptExecutor jse = (JavascriptExecutor) driver;
            jse.executeScript("arguments[0].click()", element);
        }
        {
            WebElement element = driver.findElement(By.xpath("//div[@id=\'member_menu\']/div/div/a[4]"));
            JavascriptExecutor jse = (JavascriptExecutor) driver;
            jse.executeScript("arguments[0].click()", element);
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//div[@id=\'main\']/div[4]/div[2]/div/p"));
            assert (elements.size() > 0);
        }
    }
}